plugins {
    id 'com.android.application'
}

//keystore配置(hqumath)
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdk 30

    defaultConfig {
        applicationId "com.hqumath.mvpdemo"
        minSdk 21
        targetSdk 30
        versionCode 20210902
        versionName "2.1"
        //multiDexEnabled true
    }
    buildFeatures {
        viewBinding = true
    }
    signingConfigs {
        config {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    //配置自定义打包名称
    applicationVariants.all { variant ->
        variant.outputs.all {
            def fileName
            if (variant.buildType.name.equals('release')) {
                fileName = "MVPDemo_${variant.mergedFlavor.versionName}_${variant.mergedFlavor.versionCode}.apk"
            } else if (variant.buildType.name.equals('debug')) {
                fileName = "MVPDemo_${variant.mergedFlavor.versionName}_debug_${variant.mergedFlavor.versionCode}.apk"
            }
            outputFileName = fileName
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.2.0'
    //room
    def room_version = "2.2.0"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    //rxjava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.9'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    //rx系列与View生命周期同步
    //implementation 'com.trello.rxlifecycle2:rxlifecycle:2.2.2'
    //implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.2'
    //以响应式的方式来处理UI的响应问题
    //implementation 'com.jakewharton.rxbinding3:rxbinding:3.0.0-alpha2'
    //network
    implementation 'com.squareup.okhttp3:okhttp:3.12.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.1'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'//数据解析器
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'//网络请求适配器
    // MultiDex的依赖
    //implementation 'org.robolectric:shadows-multidex:3.4-rc2'
    //下拉刷新
    implementation  'com.scwang.smart:refresh-layout-kernel:2.0.3'      //核心必须依赖
    implementation  'com.scwang.smart:refresh-header-classics:2.0.3'    //经典刷新头
    //权限获取
    implementation 'com.yanzhenjie:permission:2.0.3'
    //picture
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    //annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    //内存泄漏
    //debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'
}
